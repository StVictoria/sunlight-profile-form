{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vstepnova\\\\Desktop\\\\test1\\\\components\\\\UserForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Paper from \"@material-ui/core/Paper\";\nimport { Form, Field } from \"react-final-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useMachine } from \"@xstate/react\";\nimport { Machine } from \"xstate\";\nvar userInfo = Machine(config);\n\nvar _useMachine = useMachine(ramMachine),\n    _useMachine2 = _slicedToArray(_useMachine, 2),\n    info = _useMachine2[0],\n    send = _useMachine2[1];\n\nimport UserFormStyles from \"../styles/UserForm.module.scss\";\nvar styles = {\n  MuiPaper: {\n    background: \"#FFFFFF\",\n    padding: 45,\n    boxSizing: \"border-box\",\n    boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.15)\",\n    borderRadius: 10\n  },\n  TextField: {\n    height: 57,\n    width: 254,\n    left: 0\n  }\n};\nvar fields = [{\n  id: 0,\n  name: \"userName\",\n  label: \"Фамилия и имя\",\n  iconPath: \"/badge.png\"\n}, {\n  id: 1,\n  name: \"email\",\n  label: \"E-mail\",\n  iconPath: \"/mail.png\"\n}, {\n  id: 2,\n  name: \"phoneNumber\",\n  label: \"Номер телефона\",\n  iconPath: \"/phone.png\"\n}];\nexport default function UserForm() {\n  var _this = this;\n\n  var renderUserForm = function renderUserForm(fields) {\n    return fields.map(function (field) {\n      return __jsx(React.Fragment, null, __jsx(Field, {\n        name: field.name,\n        style: styles.TextField,\n        render: function render() {\n          return __jsx(\"div\", {\n            className: UserFormStyles.FieldItem,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }\n          }, __jsx(\"label\", {\n            \"for\": field.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }\n          }, __jsx(\"img\", {\n            src: field.iconPath,\n            className: UserFormStyles.FieldIcon,\n            alt: field.label,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }\n          })), __jsx(TextField, {\n            id: field.id,\n            label: field.label,\n            style: styles.TextField,\n            variant: \"outlined\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }), fields.length - 1 !== field.id ? __jsx(\"div\", {\n        className: UserFormStyles.Divider,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }) : null);\n    });\n  };\n\n  return __jsx(Paper, {\n    style: styles.MuiPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    onSubmit: function onSubmit() {\n      return console.log(\"sub\");\n    } // validate={validate}\n    ,\n    render: function render(_ref) {\n      var handleSubmit = _ref.handleSubmit;\n      return __jsx(\"form\", {\n        onSubmit: handleSubmit,\n        className: UserFormStyles.UserForm,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, __jsx(\"section\", {\n        className: UserFormStyles.MainFormContent,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, renderUserForm(fields)), __jsx(\"button\", {\n        type: \"submit\",\n        className: UserFormStyles.SubmitButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\n_c = UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["C:/Users/vstepnova/Desktop/test1/components/UserForm.js"],"names":["Paper","Form","Field","TextField","useMachine","Machine","userInfo","config","ramMachine","info","send","UserFormStyles","styles","MuiPaper","background","padding","boxSizing","boxShadow","borderRadius","height","width","left","fields","id","name","label","iconPath","UserForm","renderUserForm","map","field","FieldItem","FieldIcon","length","Divider","console","log","handleSubmit","MainFormContent","SubmitButton"],"mappings":"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","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useMachine } from \"@xstate/react\";\r\nimport { Machine } from \"xstate\";\r\nconst userInfo = Machine(config);\r\nconst [info, send] = useMachine(ramMachine);\r\n\r\nimport UserFormStyles from \"../styles/UserForm.module.scss\";\r\n\r\nconst styles = {\r\n  MuiPaper: {\r\n    background: \"#FFFFFF\",\r\n    padding: 45,\r\n    boxSizing: \"border-box\",\r\n    boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.15)\",\r\n    borderRadius: 10,\r\n  },\r\n  TextField: {\r\n    height: 57,\r\n    width: 254,\r\n    left: 0,\r\n  },\r\n};\r\n\r\nconst fields = [\r\n  { id: 0, name: \"userName\", label: \"Фамилия и имя\", iconPath: \"/badge.png\" },\r\n  { id: 1, name: \"email\", label: \"E-mail\", iconPath: \"/mail.png\" },\r\n  {\r\n    id: 2,\r\n    name: \"phoneNumber\",\r\n    label: \"Номер телефона\",\r\n    iconPath: \"/phone.png\",\r\n  },\r\n];\r\n\r\nexport default function UserForm() {\r\n  const renderUserForm = (fields) =>\r\n    fields.map((field) => (\r\n      <>\r\n        <Field\r\n          name={field.name}\r\n          style={styles.TextField}\r\n          render={() => (\r\n            <div className={UserFormStyles.FieldItem}>\r\n              <label for={field.id}>\r\n                <img\r\n                  src={field.iconPath}\r\n                  className={UserFormStyles.FieldIcon}\r\n                  alt={field.label}\r\n                />\r\n              </label>\r\n              <TextField\r\n                id={field.id}\r\n                label={field.label}\r\n                style={styles.TextField}\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n          )}\r\n        />\r\n        {fields.length - 1 !== field.id ? (\r\n          <div className={UserFormStyles.Divider} />\r\n        ) : null}\r\n      </>\r\n    ));\r\n\r\n  return (\r\n    <Paper style={styles.MuiPaper}>\r\n      <Form\r\n        onSubmit={() => console.log(\"sub\")}\r\n        // validate={validate}\r\n        render={({ handleSubmit }) => (\r\n          <form onSubmit={handleSubmit} className={UserFormStyles.UserForm}>\r\n            <section className={UserFormStyles.MainFormContent}>\r\n              {renderUserForm(fields)}\r\n            </section>\r\n\r\n            <button type=\"submit\" className={UserFormStyles.SubmitButton}>\r\n              Сохранить изменения\r\n            </button>\r\n            {/* <p className={UserFormStyles.SuccessMessage}>\r\n              Изменения сохранены!\r\n            </p> */}\r\n          </form>\r\n        )}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}